{
  "schemaVersion": "2.0.0",
  "contractName": "Registry",
  "compilerOutput": {
    "abi": [
      {
        "constant": false,
        "inputs": [],
        "name": "renounceWhitelistAdmin",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "account",
            "type": "address"
          }
        ],
        "name": "addWhitelistAdmin",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "account",
            "type": "address"
          }
        ],
        "name": "isWhitelistAdmin",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "name": "_vault",
            "type": "address"
          },
          {
            "name": "_admin",
            "type": "address"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "account",
            "type": "address"
          }
        ],
        "name": "WhitelistAdminAdded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "account",
            "type": "address"
          }
        ],
        "name": "WhitelistAdminRemoved",
        "type": "event"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_user",
            "type": "address"
          },
          {
            "name": "_newUserRole",
            "type": "uint8"
          }
        ],
        "name": "addUser",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_user",
            "type": "address"
          }
        ],
        "name": "removeUser",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "_user",
            "type": "address"
          },
          {
            "name": "_newUserRole",
            "type": "uint8"
          }
        ],
        "name": "updateUser",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "kill",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_user",
            "type": "address"
          }
        ],
        "name": "verifyPayout",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_user",
            "type": "address"
          }
        ],
        "name": "getUserRole",
        "outputs": [
          {
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "isAlive",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "evm": {
      "bytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD22 CODESIZE SUB DUP1 PUSH2 0xD22 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH2 0x5B CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0xB0 AND JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR DUP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND SWAP3 DUP5 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 SLOAD SWAP1 SWAP2 AND SWAP1 MSTORE PUSH2 0x224 JUMP JUMPDEST PUSH2 0xC8 DUP2 PUSH1 0x0 PUSH2 0xFF PUSH1 0x20 SHL PUSH2 0x8ED OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x22380C05984257A1CB900161C713DD71D39E74820F1AEA43BD3F1BDD20961299 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x112 DUP3 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x1A3 AND JUMP JUMPDEST ISZERO PUSH2 0x17E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD00 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xACD DUP1 PUSH2 0x233 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7041682C GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x98575188 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x98575188 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x9C3EEAD9 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xBB5F747B EQ PUSH2 0x1FD JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x7041682C EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x7362D9C8 EQ PUSH2 0x182 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x4C5A628C EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x51792BD2 EQ PUSH2 0x12D JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x27820851 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x4136AA35 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x24A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x29F JUMP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x49F JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x99D PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A8 CALLER PUSH2 0x70D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x99D PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x346 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766572742C207573657220726F6C6520696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x40B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x472 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207065726D697373696F6E730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4A8 CALLER PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA1C PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x755 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x53F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207065726D697373696F6E730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x617 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x695 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO JUMPDEST PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x96F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68F DUP3 DUP3 PUSH2 0x79D JUMP JUMPDEST POP PUSH2 0x6F1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x6BA JUMPI PUSH2 0x68F DUP3 DUP3 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA5C PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x707 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x81F AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71E PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x886 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA8EB35E5CA14B3D6F28E4ABF2F128DBAB231A58B56E89BEB5D636115001E165 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x766 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8ED AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x22380C05984257A1CB900161C713DD71D39E74820F1AEA43BD3F1BDD20961299 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x7F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9FA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x890 DUP3 DUP3 PUSH2 0x81F JUMP JUMPDEST PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9D9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8F7 DUP3 DUP3 PUSH2 0x81F JUMP JUMPDEST ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID POP PUSH6 0x726D69737369 PUSH16 0x6E2064656E6965642C20434857206361 PUSH15 0x6E6F74206164642061646D696E206F PUSH19 0x204348575065726D697373696F6E2064656E69 PUSH6 0x642C206F6E6C PUSH26 0x2061646D696E20636F6E74726163742063616E20757365206675 PUSH15 0x6374696F6E616C697479526F6C6573 GASPRICE KECCAK256 PUSH2 0x6363 PUSH16 0x756E7420646F6573206E6F7420686176 PUSH6 0x20726F6C6552 PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F206164647265737357686974656C PUSH10 0x737441646D696E526F6C PUSH6 0x3A2063616C6C PUSH6 0x7220646F6573 KECCAK256 PUSH15 0x6F7420686176652074686520576869 PUSH21 0x656C69737441646D696E20726F6C655065726D6973 PUSH20 0x696F6E2064656E6965642C206F6E6C792061646D PUSH10 0x6E20636F6E7472616374 KECCAK256 0x26 KECCAK256 NUMBER 0x48 JUMPI KECCAK256 PUSH4 0x616E2075 PUSH20 0x652066756E6374696F6EA265627A7A723058208F 0xc7 SSTORE 0xa6 CODESIZE PUSH7 0x17E7715646B553 EXP 0x25 0x4b PUSH26 0x6A8D09C5CA6BD092DF8654BF075E4964736F6C634300050A0032 MSTORE PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F2061646472657373000000000000 ",
        "sourceMap": "295:4453:3:-;;;698:28;;;-1:-1:-1;;698:28:3;722:4;698:28;;;982:271;5:2:-1;;;;30:1;27;20:12;5:2;982:271:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;982:271:3;;;;;;;432:30:5;451:10;-1:-1:-1;;;;;432:18:5;:30;:::i;:::-;1064:14:3;:31;;-1:-1:-1;;;;;;1064:31:3;;;-1:-1:-1;;;;;1064:31:3;;;;;;1105:14;:31;;;;;;;;;;;;;;1159:10;-1:-1:-1;1146:24:3;;;:12;:24;;;;;:38;;-1:-1:-1;;1146:38:3;;;;;;;1215:14;;;;;1194:37;;295:4453;;990:143:5;1054:29;1075:7;1054:16;:20;;;;;;:29;;;;:::i;:::-;1098:28;;-1:-1:-1;;;;;1098:28:5;;;;;;;;990:143;:::o;260:175:4:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:4;:18;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:4;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:4;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:4;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:4;:11;:20;;;;;;;;;;;;;;;779:200::o;295:4453:3:-;;;;;;;"
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80637041682c116100665780637041682c146101935780637362d9c8146101e457806398575188146102285780639c3eead91461026c578063bb5f747b146102bd5761009e565b806327820851146100a35780634136aa351461010157806341c0e1b5146101235780634c5a628c1461012d57806351792bd214610137575b600080fd5b6100e5600480360360208110156100b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610319565b604051808260ff1660ff16815260200191505060405180910390f35b610109610372565b604051808215151515815260200191505060405180910390f35b61012b610389565b005b61013561044c565b005b6101796004803603602081101561014d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610457565b604051808215151515815260200191505060405180910390f35b6101e2600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610653565b005b610226600480360360208110156101fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107fc565b005b61026a6004803603602081101561023e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610866565b005b6102bb6004803603604081101561028257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610a0f565b005b6102ff600480360360208110156102d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c31565b604051808215151515815260200191505060405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b6000600460009054906101000a900460ff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806110de603c913960400191505060405180910390fd5b6000600460006101000a81548160ff021916908315150217905550565b61045533610c4e565b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806110de603c913960400191505060405180910390fd5b600460009054906101000a900460ff16610581576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5265676973747279206973206e6f74206163746976650000000000000000000081525060200191505060405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff16141561064a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5265766572742c207573657220726f6c6520696e61637469766500000000000081525060200191505060405180910390fd5b60019050919050565b600460009054906101000a900460ff166106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5265676973747279206973206e6f74206163746976650000000000000000000081525060200191505060405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff161461079d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e636f7272656374207065726d697373696f6e73000000000000000000000081525060200191505060405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff1602179055505050565b61080533610c31565b61085a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061115d6040913960400191505060405180910390fd5b61086381610ca8565b50565b600460009054906101000a900460ff166108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5265676973747279206973206e6f74206163746976650000000000000000000081525060200191505060405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff16146109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f496e636f7272656374207065726d697373696f6e73000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff16021790555050565b600460009054906101000a900460ff16610a91576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5265676973747279206973206e6f74206163746976650000000000000000000081525060200191505060405180910390fd5b6002600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff161415610b695760018160ff1614158015610b04575060028160ff1614155b610b59576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806110b0602e913960400191505060405180910390fd5b610b638282610d02565b50610c2d565b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660ff161415610bd457610bce8282610d02565b50610c2c565b6000610c2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d81526020018061119d603d913960400191505060405180910390fd5b5b5b5050565b6000610c47826000610e3990919063ffffffff16565b9050919050565b610c62816000610f1790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b610cbc816000610fd490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6000600460009054906101000a900460ff16610d86576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5265676973747279206973206e6f74206163746976650000000000000000000081525060200191505060405180910390fd5b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360ff160217905550600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061113b6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610f218282610e39565b610f76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061111a6021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610fde8282610e39565b15611051576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe5065726d697373696f6e2064656e6965642c204348572063616e6e6f74206164642061646d696e206f72204348575065726d697373696f6e2064656e6965642c206f6e6c792061646d696e20636f6e74726163742063616e207573652066756e6374696f6e616c697479526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f206164647265737357686974656c69737441646d696e526f6c653a2063616c6c657220646f6573206e6f742068617665207468652057686974656c69737441646d696e20726f6c655065726d697373696f6e2064656e6965642c206f6e6c792061646d696e20636f6e74726163742026204348572063616e207573652066756e6374696f6ea265627a7a72305820215c065045586441692482e52a6d47fffa595941decbc29251cc10f0f401c68c64736f6c634300050a0032",
        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7041682C GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x98575188 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x98575188 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x9C3EEAD9 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xBB5F747B EQ PUSH2 0x1FD JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x7041682C EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x7362D9C8 EQ PUSH2 0x182 JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x41C0E1B5 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x4C5A628C EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x51792BD2 EQ PUSH2 0x12D JUMPI PUSH2 0xBE JUMP JUMPDEST DUP1 PUSH4 0x27820851 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x4136AA35 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH2 0x24A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x29F JUMP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AA JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x49F JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x99D PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A8 CALLER PUSH2 0x70D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x99D PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x346 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766572742C207573657220726F6C6520696E616374697665000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x40B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x472 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207065726D697373696F6E730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4A8 CALLER PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA1C PUSH1 0x40 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EC DUP2 PUSH2 0x755 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x53F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x5A6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207065726D697373696F6E730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND PUSH2 0x617 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x695 JUMPI DUP1 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO DUP1 ISZERO PUSH2 0x64A JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO JUMPDEST PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x96F PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68F DUP3 DUP3 PUSH2 0x79D JUMP JUMPDEST POP PUSH2 0x6F1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x6BA JUMPI PUSH2 0x68F DUP3 DUP3 PUSH2 0x79D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA5C PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x707 DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x81F AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71E PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x886 AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xA8EB35E5CA14B3D6F28E4ABF2F128DBAB231A58B56E89BEB5D636115001E165 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x766 PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8ED AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x22380C05984257A1CB900161C713DD71D39E74820F1AEA43BD3F1BDD20961299 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x7F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x5265676973747279206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 DUP4 AND OR SWAP1 DUP2 SWAP1 SSTORE AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9FA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x890 DUP3 DUP3 PUSH2 0x81F JUMP JUMPDEST PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9D9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8F7 DUP3 DUP3 PUSH2 0x81F JUMP JUMPDEST ISZERO PUSH2 0x949 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID POP PUSH6 0x726D69737369 PUSH16 0x6E2064656E6965642C20434857206361 PUSH15 0x6E6F74206164642061646D696E206F PUSH19 0x204348575065726D697373696F6E2064656E69 PUSH6 0x642C206F6E6C PUSH26 0x2061646D696E20636F6E74726163742063616E20757365206675 PUSH15 0x6374696F6E616C697479526F6C6573 GASPRICE KECCAK256 PUSH2 0x6363 PUSH16 0x756E7420646F6573206E6F7420686176 PUSH6 0x20726F6C6552 PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F206164647265737357686974656C PUSH10 0x737441646D696E526F6C PUSH6 0x3A2063616C6C PUSH6 0x7220646F6573 KECCAK256 PUSH15 0x6F7420686176652074686520576869 PUSH21 0x656C69737441646D696E20726F6C655065726D6973 PUSH20 0x696F6E2064656E6965642C206F6E6C792061646D PUSH10 0x6E20636F6E7472616374 KECCAK256 0x26 KECCAK256 NUMBER 0x48 JUMPI KECCAK256 PUSH4 0x616E2075 PUSH20 0x652066756E6374696F6EA265627A7A723058208F 0xc7 SSTORE 0xa6 CODESIZE PUSH7 0x17E7715646B553 EXP 0x25 0x4b PUSH26 0x6A8D09C5CA6BD092DF8654BF075E4964736F6C634300050A0032 ",
        "sourceMap": "295:4453:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:4453:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4209:118;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4209:118:3;-1:-1:-1;;;;;4209:118:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;4410:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;3679:77;;;:::i;:::-;;893:91:5;;;:::i;3841:299:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3841:299:3;-1:-1:-1;;;;;3841:299:3;;:::i;3218:296::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3218:296:3;;-1:-1:-1;;;;;3218:296:3;;;;;;;;:::i;773:114:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;773:114:5;-1:-1:-1;;;;;773:114:5;;:::i;2860:257:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2860:257:3;-1:-1:-1;;;;;2860:257:3;;:::i;2043:740::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2043:740:3;;-1:-1:-1;;;;;2043:740:3;;;;;;;;:::i;644:123:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;644:123:5;-1:-1:-1;;;;;644:123:5;;:::i;4209:118:3:-;-1:-1:-1;;;;;4291:19:3;4267:5;4291:19;;;:12;:19;;;;;:29;;;;4209:118::o;4410:78::-;4474:7;;;;4410:78;:::o;3679:77::-;1341:14;;-1:-1:-1;;;;;1341:14:3;1319:10;:37;1298:144;;;;-1:-1:-1;;;1298:144:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3734:7;:15;;-1:-1:-1;;3734:15:3;;;3679:77::o;893:91:5:-;944:33;966:10;944:21;:33::i;:::-;893:91::o;3841:299:3:-;1548:14;;3985:4;;-1:-1:-1;;;;;1548:14:3;1526:10;:37;1505:144;;;;-1:-1:-1;;;1505:144:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:7;;;;1703:42;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;4026:19:3;;;;;;:12;:19;;;;;:29;;;4005:107;;;;;-1:-1:-1;;;4005:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4129:4:3;3841:299;;;:::o;3218:296::-;1711:7;;;;1703:42;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;;;;3379:10;3366:24;;;;:12;:24;;;;;:34;;;;:39;3345:107;;;;;-1:-1:-1;;;3345:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:19:3;;;;;;;;:12;:19;;;;;:44;;-1:-1:-1;;3463:44:3;;;;;;;;;;;3218:296::o;773:114:5:-;523:28;540:10;523:16;:28::i;:::-;515:105;;;;-1:-1:-1;;;515:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:27;872:7;853:18;:27::i;:::-;773:114;:::o;2860:257:3:-;1711:7;;;;1703:42;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;;;;2993:10;2980:24;;;;:12;:24;;;;;:34;;;;:39;2959:107;;;;;-1:-1:-1;;;2959:107:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3077:19:3;3109:1;3077:19;;;:12;:19;;;;;:33;;-1:-1:-1;;3077:33:3;;;2860:257::o;2043:740::-;1711:7;;;;1703:42;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;;;;2141:10;2128:24;;;;:12;:24;;;;;:34;;;2166:1;2128:39;2125:652;;;2281:12;:17;;2297:1;2281:17;;:38;;;;;2302:12;:17;;2318:1;2302:17;;2281:38;2256:143;;;;-1:-1:-1;;;2256:143:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2444:29;2453:5;2460:12;2444:8;:29::i;:::-;;2125:652;;;2507:10;2494:24;;;;:12;:24;;;;;:34;;;;:39;2491:286;;;2580:29;2589:5;2596:12;2580:8;:29::i;2491:286::-;2641:125;;-1:-1:-1;;;2641:125:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2043:740;;:::o;644:123:5:-;708:4;731:29;708:4;752:7;731:29;:20;:29;:::i;:::-;724:36;644:123;-1:-1:-1;;644:123:5:o;1139:151::-;1206:32;:16;1230:7;1206:32;:23;:32;:::i;:::-;1253:30;;-1:-1:-1;;;;;1253:30:5;;;;;;;;1139:151;:::o;990:143::-;1054:29;:16;1075:7;1054:29;:20;:29;:::i;:::-;1098:28;;-1:-1:-1;;;;;1098:28:5;;;;;;;;990:143;:::o;4494:252:3:-;1711:7;;4621:5;;1711:7;;1703:42;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;-1:-1:-1;;;1703:42:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4642:19:3;;;;;;;;:12;:19;;;;;:44;;-1:-1:-1;;4642:44:3;;;;;;;;;;4709:29;;4494:252::o;779:200:4:-;851:4;-1:-1:-1;;;;;875:21:4;;867:68;;;;-1:-1:-1;;;867:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:4;:11;:20;;;;;;;;;;;;;;;779:200::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:4;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:4;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:4;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:4;424:4;401:27;;;260:175::o"
      }
    }
  },
  "sources": {
    "Registry/Registry.sol": {
      "id": 3
    },
    "Vault/IVault.sol": {
      "id": 7
    },
    "AdminDAO/IAdmin.sol": {
      "id": 1
    },
    "Support/WhitelistAdminRole.sol": {
      "id": 5
    },
    "Support/Roles.sol": {
      "id": 4
    },
    "Support/math/SafeMath.sol": {
      "id": 6
    },
    "Registry/IRegistry.sol": {
      "id": 2
    }
  },
  "sourceCodes": {
    "Registry/Registry.sol": "pragma solidity 0.5.10;\n\nimport { IVault } from \"../Vault/IVault.sol\";\nimport { IAdmin } from \"../AdminDAO/IAdmin.sol\";\nimport { WhitelistAdminRole } from \"../Support/WhitelistAdminRole.sol\";\nimport { SafeMath } from \"../Support/math/SafeMath.sol\";\nimport { IRegistry } from \"./IRegistry.sol\";\n\ncontract Registry is IRegistry, WhitelistAdminRole {\n    using SafeMath for uint256;\n\n    // The contract instance of the vault contract\n    IVault internal _vaultInstance;\n    // The contract instance of the admin contract\n    IAdmin internal _adminInstance;\n    // The storage of uses and their roles\n    mapping(address => UserInfo) internal _userDetails;\n    // The active state of the registry\n    bool internal _active = true;\n\n    struct UserInfo {\n        uint8 _userRole;\n        // 0 = inactive\n        // 1 = super admin\n        // 2 = admin (CHW)\n        // 3 = patient\n        // 4 = practitoner\n    }\n\n    /**\n      * @notice Sets up the registries variables.\n      */\n    constructor(address _vault, address _admin) public WhitelistAdminRole() {\n        _vaultInstance = IVault(_vault);\n        _adminInstance = IAdmin(_admin);\n        _userDetails[msg.sender]._userRole = 1;\n        _userDetails[address(_adminInstance)]._userRole == 1;\n    }\n\n    modifier onlyAdminContract() {\n        require(\n            msg.sender == address(_adminInstance),\n            \"Permission denied, only admin contract can use functionality\"\n        );\n        _;\n    }\n\n    modifier onlyVaultContract() {\n        require(\n            msg.sender == address(_vaultInstance),\n            \"Permission denied, only admin contract can use functionality\"\n        );\n        _;\n    }\n\n    modifier isActive() {\n        require(_active, \"Registry is not active\");\n        _;\n    }\n\n    /**\n      * @notice Allows the adding of a user as any user role. If the\n      *         `msg.sender` is the admin contract, any user role may be added.\n      *         If the `msg.sender` is a CHW, only patients and practitioners\n      *         may be added.\n      */\n    function addUser(address _user, uint8 _newUserRole) external isActive() {\n        if(_userDetails[msg.sender]._userRole == 2) {\n            // Ensuring the CHW only adds roles it has permission to add\n            require(\n                _newUserRole != 1 && _newUserRole != 2,\n                \"Permission denied, CHW cannot add admin or CHW\"\n            );\n            // Adding the user\n            _addUser(_user, _newUserRole);\n\n        } else if(_userDetails[msg.sender]._userRole == 1) {\n            // Adding the user\n            _addUser(_user, _newUserRole);\n\n        } else {\n            require(\n                false,\n                \"Permission denied, only admin contract & CHW can use function\"\n            );\n        }\n    }\n    \n    /**\n      * @notice Allows an admin to remove a user.\n      */\n    function removeUser(\n        address _user\n    )\n        external\n        isActive()\n    {\n        require(\n            _userDetails[msg.sender]._userRole == 1,\n            \"Incorrect permissions\"\n        );\n\n        _userDetails[_user]._userRole = 0;\n    }\n    \n    /**\n      * @notice Allows the admin contract to update the role of the user.\n      */\n    function updateUser(\n        address _user,\n        uint8 _newUserRole\n    )\n        external\n        isActive()\n    {\n        require(\n            _userDetails[msg.sender]._userRole == 1,\n            \"Incorrect permissions\"\n        );\n\n        _userDetails[_user]._userRole = _newUserRole;\n    }\n    \n    /**\n      * @notice Allows the admin contract to kill the registry, which will\n      *         prevent any users from being added or removed.\n      */\n    function kill() external onlyAdminContract() {\n        _active = false;\n    }\n\n    /**\n      * @notice Allows the vault contract to record a payout.\n      */\n    function verifyPayout(\n        address _user\n    )\n        external\n        view\n        onlyVaultContract()\n        isActive()\n        returns(bool)\n    {\n        require(\n            _userDetails[_user]._userRole != 0,\n            \"Revert, user role inactive\"\n        );\n        return true;\n    }\n\n    /**\n      * @notice Returns the role of the user.\n      */\n    function getUserRole(address _user) external view returns(uint8) {\n        return _userDetails[_user]._userRole;\n    }\n\n    /**\n      * @return bool : If the contract is currently active.\n      */\n    function isAlive() external view returns(bool) {\n        return _active;\n    }\n\n    function _addUser(\n        address _user,\n        uint8 _newUserRole\n    )\n        internal\n        isActive()\n        returns(uint8)\n    {\n        _userDetails[_user]._userRole = _newUserRole;\n        return uint8(_userDetails[_user]._userRole);\n    }\n}",
    "Vault/IVault.sol": "pragma solidity 0.5.10;\n\ninterface IVault {\n\n    enum UserRole { INACTIVE, ADMIN, CHW, PAT, PRAC }\n    \n    /**\n      * @notice Allows the vault to receive funds from the admin contract. This\n      *         will mint tokens that will be owned by the vault until they are\n      *         spent as payouts.\n      */\n    function donateFunds() external payable;\n\n    /**\n      * @notice Allows a CHW to create payouts. The `msg.sender` is verified\n      *         against the registry.\n      */\n    function payout(\n        address payable _patient,\n        address payable _practitioner,\n        address payable _CHW,\n        uint256 _amountEach\n    )\n        external;\n\n    /**\n      * @notice Allows the admin contract to add the address of the registry.\n      * @dev    The vault will not function untill this function has been\n      *         called. This function is called from the admin contract.\n      */\n    function init(address _registry) external;\n\n    /**\n      * @notice Allows the admin contract to kill the vault. This will make the\n      *         vault send all collateral to the admin contract owner, as well\n      *         as burn all remaining tokens.\n      */\n    function kill() external;\n}",
    "AdminDAO/IAdmin.sol": "pragma solidity 0.5.10;\n\ninterface IAdmin {\n\n    enum UserRole { INACTIVE, ADMIN, CHW, PAT, PRAC }\n\n    /**\n      * @notice Sends funds to the vault.\n      */\n    function donateFunds() external payable;\n\n    /**\n      * @notice Allows the admin contract to remove a user.\n      */\n    function removeUserFromRegistry(address _user) external;\n\n    /**\n      * @notice Allows the admin of the admin contract to kill the eco-system.\n      *         This will send all remaining collateral in the vault to the\n      *         admin as well as burning all the tokens. This function will kill\n      *         the vault and the registry.\n      */\n    function kill() external;\n}",
    "Support/WhitelistAdminRole.sol": "pragma solidity ^0.5.0;\n\nimport \"./Roles.sol\";\n\n/**\n * @title WhitelistAdminRole\n * @dev WhitelistAdmins are responsible for assigning and removing Whitelisted accounts.\n */\ncontract WhitelistAdminRole {\n    using Roles for Roles.Role;\n\n    event WhitelistAdminAdded(address indexed account);\n    event WhitelistAdminRemoved(address indexed account);\n\n    Roles.Role private _whitelistAdmins;\n\n    constructor () internal {\n        _addWhitelistAdmin(msg.sender);\n    }\n\n    modifier onlyWhitelistAdmin() {\n        require(isWhitelistAdmin(msg.sender), \"WhitelistAdminRole: caller does not have the WhitelistAdmin role\");\n        _;\n    }\n\n    function isWhitelistAdmin(address account) public view returns (bool) {\n        return _whitelistAdmins.has(account);\n    }\n\n    function addWhitelistAdmin(address account) public onlyWhitelistAdmin {\n        _addWhitelistAdmin(account);\n    }\n\n    function renounceWhitelistAdmin() public {\n        _removeWhitelistAdmin(msg.sender);\n    }\n\n    function _addWhitelistAdmin(address account) internal {\n        _whitelistAdmins.add(account);\n        emit WhitelistAdminAdded(account);\n    }\n\n    function _removeWhitelistAdmin(address account) internal {\n        _whitelistAdmins.remove(account);\n        emit WhitelistAdminRemoved(account);\n    }\n}\n",
    "Support/Roles.sol": "pragma solidity ^0.5.0;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping (address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}\n",
    "Support/math/SafeMath.sol": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n",
    "Registry/IRegistry.sol": "pragma solidity 0.5.10;\n\ninterface IRegistry {\n\n    /**\n      * @notice Allows the adding of a user as any user role. If the\n      *         `msg.sender` is the admin contract, any user role may be added.\n      *         If the `msg.sender` is a CHW, only patients and practitioners\n      *         may be added.\n      */\n    function addUser(address _user, uint8 _userRole) external;\n    \n    /**\n      * @notice Allows the admin contract to remove a user.\n      */\n    function removeUser(address _user) external;\n    \n    /**\n      * @notice Allows the admin contract to update the role of the user.\n      */\n    function updateUser(address _user, uint8 _newUserRole) external;\n\n    /**\n      * @notice Allows the vault contract to verify an account for a payout.\n      */\n    function verifyPayout(address _user) external view returns(bool);\n    \n    /**\n      * @notice Returns the role of the user.\n      */\n    function getUserRole(address _user) external view returns(uint8);\n\n    /**\n      * @return bool : If the contract is currently active.\n      */\n    function isAlive() external view returns(bool);\n    \n    /**\n      * @notice Allows the admin contract to kill the registry, which will\n      *         prevent any users from being added or removed.\n      */\n    function kill() external;\n}"
  },
  "sourceTreeHashHex": "0xa0cc72ac0ab164f234ba189e1c738ccffb3c83e58d205e24185525ca1785b828",
  "compiler": {
    "name": "solc",
    "version": "soljson-v0.5.10+commit.5a6ea5b1.js",
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 999
      },
      "outputSelection": {
        "*": {
          "*": ["abi", "evm.bytecode.object", "evm.deployedBytecode.object"]
        }
      },
      "remappings": []
    }
  },
  "networks": {}
}
