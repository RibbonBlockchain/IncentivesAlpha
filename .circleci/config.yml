version: 2.1
orbs:
  node: circleci/node@1.0.1
  gcp-gke: circleci/gcp-gke@0.1.0
  gcr: circleci/gcp-gcr@0.0.2
jobs:
  # build:
  #   description: Install npm
  #   # machine option runs your jobs in a dedicated, ephemeral VM that has the following specifications:
  #   machine: true
  #   working_directory: ~/IncentivesAlpha
  #   steps:
  #     - checkout
  #     # Install node
  #     - node/install
  #     # Install npm
  #     - node/install-npm
  #     # Download and cache dependencies
  #     - node/with-cache:
  #         steps:
  #           - run:
  #               name: Install application dependencies
  #               command: |
  #                 pwd
  #                 ls
  #                 cd API
  #                 ls
  #                 npm install
  #         # Save cache
  #         cache-key: package.json
  #         # Ignore non-checksum cache hits
  #         use-strict-cache: true
  Build-Push-Image-Docker:
    description: Build and push image to Google Container Registry
    machine: true
    working_directory: ~/IncentivesAlpha/API
    steps:
      - checkout
      - gcr/gcr-auth
      - gcr/build-image:
          image: incentives-api
          tag: "v2" #Change version number e.g to 'v3' when updating application
      - gcr/push-image:
          image: incentives-api
          tag: "v2" #Change version number e.g to 'v3' when updating application
    
  deploy:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    working_directory: ~/IncentivesAlpha/API
    steps:
      # Install `gcloud` and `kubectl` if not already installed.
      - gcp-gke/install
      # Initialize the `gcloud` CLI.
      - gcp-gke/init
      # Update a deployment Docker image.
      - gcp-gke/rollout-image:
          deployment: incentives-api-staging
          container: dominic-backend
          image: gcr.io/ribbonblockchain/incentives-api:v2 # change version when updating
workflows:
  build_update_deploy:
    jobs:
      # - build
      - Build-Push-Image-Docker:
          # requires:
          #   - build
      - deploy:
          requires:
            - Build-Push-Image-Docker