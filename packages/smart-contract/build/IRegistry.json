{
  "contractName": "IRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_userRole",
          "type": "uint8"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_newUserRole",
          "type": "uint8"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "verifyPayout",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserRole",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isAlive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.10;\n\ninterface IRegistry {\n\n    /**\n      * @notice Allows the adding of a user as any user role. If the\n      *         `msg.sender` is the admin contract, any user role may be added.\n      *         If the `msg.sender` is a CHW, only patients and practitioners\n      *         may be added.\n      */\n    function addUser(address _user, uint8 _userRole) external;\n    \n    /**\n      * @notice Allows the admin contract to remove a user.\n      */\n    function removeUser(address _user) external;\n    \n    /**\n      * @notice Allows the admin contract to update the role of the user.\n      */\n    function updateUser(address _user, uint8 _newUserRole) external;\n\n    /**\n      * @notice Allows the vault contract to verify an account for a payout.\n      */\n    function verifyPayout(address _user) external view returns(bool);\n    \n    /**\n      * @notice Returns the role of the user.\n      */\n    function getUserRole(address _user) external view returns(uint8);\n\n    /**\n      * @return bool : If the contract is currently active.\n      */\n    function isAlive() external view returns(bool);\n    \n    /**\n      * @notice Allows the admin contract to kill the registry, which will\n      *         prevent any users from being added or removed.\n      */\n    function kill() external;\n}",
  "sourcePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/Registry/IRegistry.sol",
  "ast": {
    "absolutePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/Registry/IRegistry.sol",
    "exportedSymbols": {
      "IRegistry": [167]
    },
    "id": 168,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 125,
        "literals": ["solidity", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 167,
        "linearizedBaseContracts": [167],
        "name": "IRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Allows the adding of a user as any user role. If the\n        `msg.sender` is the admin contract, any user role may be added.\n        If the `msg.sender` is a CHW, only patients and practitioners\n        may be added.",
            "id": 132,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "343:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "name": "_userRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "358:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "342:32:2"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:2"
            },
            "scope": 167,
            "src": "326:58:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to remove a user.",
            "id": 137,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "491:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:15:2"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:2"
            },
            "scope": 167,
            "src": "471:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to update the role of the user.",
            "id": 144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "636:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "_newUserRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "651:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:35:2"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:2"
            },
            "scope": 167,
            "src": "616:64:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the vault contract to verify an account for a payout.",
            "id": 151,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyPayout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "802:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:15:2"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "839:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "838:6:2"
            },
            "scope": 167,
            "src": "780:65:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the role of the user.",
            "id": 158,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "939:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "938:15:2"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "976:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "975:7:2"
            },
            "scope": 167,
            "src": "918:65:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return bool : If the contract is currently active.",
            "id": 163,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAlive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:2:2"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1107:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:6:2"
            },
            "scope": 167,
            "src": "1066:47:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to kill the registry, which will\n        prevent any users from being added or removed.",
            "id": 166,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:2:2"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1302:0:2"
            },
            "scope": 167,
            "src": "1278:25:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 168,
        "src": "25:1280:2"
      }
    ],
    "src": "0:1305:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/Registry/IRegistry.sol",
    "exportedSymbols": {
      "IRegistry": [167]
    },
    "id": 168,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 125,
        "literals": ["solidity", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 167,
        "linearizedBaseContracts": [167],
        "name": "IRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Allows the adding of a user as any user role. If the\n        `msg.sender` is the admin contract, any user role may be added.\n        If the `msg.sender` is a CHW, only patients and practitioners\n        may be added.",
            "id": 132,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "343:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "name": "_userRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "358:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "342:32:2"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:2"
            },
            "scope": 167,
            "src": "326:58:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to remove a user.",
            "id": 137,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "491:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "490:15:2"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:2"
            },
            "scope": 167,
            "src": "471:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to update the role of the user.",
            "id": 144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "636:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "name": "_newUserRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "651:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:35:2"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:2"
            },
            "scope": 167,
            "src": "616:64:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the vault contract to verify an account for a payout.",
            "id": 151,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "verifyPayout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "802:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "801:15:2"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "839:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "838:6:2"
            },
            "scope": 167,
            "src": "780:65:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Returns the role of the user.",
            "id": 158,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "939:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "938:15:2"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "976:5:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "976:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "975:7:2"
            },
            "scope": 167,
            "src": "918:65:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@return bool : If the contract is currently active.",
            "id": 163,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAlive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1082:2:2"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1107:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1106:6:2"
            },
            "scope": 167,
            "src": "1066:47:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to kill the registry, which will\n        prevent any users from being added or removed.",
            "id": 166,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:2:2"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1302:0:2"
            },
            "scope": 167,
            "src": "1278:25:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 168,
        "src": "25:1280:2"
      }
    ],
    "src": "0:1305:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang",
    "optimizer": true,
    "runs": 500
  },
  "networks": {},
  "schemaVersion": "2.2.0",
  "updatedAt": "2019-10-22T17:03:42.456Z"
}
