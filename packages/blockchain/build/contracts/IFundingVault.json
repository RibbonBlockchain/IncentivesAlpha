{
  "contractName": "IFundingVault",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_switch",
          "type": "bool"
        }
      ],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity = 0.5.0;\r\n\r\ncontract IFundingVault {\r\n\r\n    /**\r\n      * @dev Allows the admin contract to update/set the address of the vault\r\n      * @notice This can only be called by the admin contract\r\n      */\r\n    function setRegistry(address _registry) external;\r\n    \r\n    /**\r\n      * @dev This function allows the admin contract to disable payouts and \r\n      *         withdraws from the vault.\r\n      * @notice This function can only be called by an admin on the admin \r\n      *         contact.\r\n      */\r\n    function kill(bool _switch) external;\r\n\r\n    // TODO:\r\n    // 1. Functionality to approve an address to spend vault funds (onlyAdmin)\r\n    // 2. Payout functionality \r\n    // 3. \r\n}",
  "sourcePath": "C:\\Users\\Veronica Coutts\\Desktop\\Desktop\\Work\\Ribbon\\projects\\IncentivesAlpha\\Blockchain\\contracts\\Vault\\IFundingVault.sol",
  "ast": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Vault/IFundingVault.sol",
    "exportedSymbols": {
      "IFundingVault": [
        673
      ]
    },
    "id": 674,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 662,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 673,
        "linearizedBaseContracts": [
          673
        ],
        "name": "IFundingVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to update/set the address of the vault\r\n@notice This can only be called by the admin contract\r",
            "id": 667,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "242:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "241:19:11"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:11"
            },
            "scope": 673,
            "src": "221:49:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev This function allows the admin contract to disable payouts and \r\n        withdraws from the vault.\r\n@notice This function can only be called by an admin on the admin \r\n        contact.\r",
            "id": 672,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "name": "_switch",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "538:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:14:11"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:11"
            },
            "scope": 673,
            "src": "524:37:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 674,
        "src": "28:677:11"
      }
    ],
    "src": "0:705:11"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Vault/IFundingVault.sol",
    "exportedSymbols": {
      "IFundingVault": [
        673
      ]
    },
    "id": 674,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 662,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 673,
        "linearizedBaseContracts": [
          673
        ],
        "name": "IFundingVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to update/set the address of the vault\r\n@notice This can only be called by the admin contract\r",
            "id": 667,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "242:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "241:19:11"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:11"
            },
            "scope": 673,
            "src": "221:49:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev This function allows the admin contract to disable payouts and \r\n        withdraws from the vault.\r\n@notice This function can only be called by an admin on the admin \r\n        contact.\r",
            "id": 672,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "name": "_switch",
                  "nodeType": "VariableDeclaration",
                  "scope": 672,
                  "src": "538:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "537:14:11"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:11"
            },
            "scope": 673,
            "src": "524:37:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 674,
        "src": "28:677:11"
      }
    ],
    "src": "0:705:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-13T16:43:50.848Z",
  "devdoc": {
    "methods": {
      "kill(bool)": {
        "details": "This function allows the admin contract to disable payouts and \r        withdraws from the vault.\r"
      },
      "setRegistry(address)": {
        "details": "Allows the admin contract to update/set the address of the vault\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "kill(bool)": {
        "notice": "This function can only be called by an admin on the admin \r        contact.\r"
      },
      "setRegistry(address)": {
        "notice": "This can only be called by the admin contract\r"
      }
    }
  }
}