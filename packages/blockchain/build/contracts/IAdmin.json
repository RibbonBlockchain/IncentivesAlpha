{
  "contractName": "IAdmin",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Admin/IAdmin.sol\":\"IAdmin\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Admin/IAdmin.sol\":{\"keccak256\":\"0x34090f92b714be335ebd12554cdc3af95e675adb8d849142c91cf80509fba776\",\"urls\":[\"bzzr://add72654f8439b0914f047de36add25e740b84e57c5bad5dd8ae5dfe5bbf275f\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a72305820a0cdc2afe26a98ec46234861e168162d2cf14668ae113b73fe45cb9b4d6bba7c0029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a72305820a0cdc2afe26a98ec46234861e168162d2cf14668ae113b73fe45cb9b4d6bba7c0029",
  "sourceMap": "28:952:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28:952:3;;;;;;;",
  "deployedSourceMap": "28:952:3:-;;;;;",
  "source": "pragma solidity = 0.5.0;\r\n\r\ncontract IAdmin {\r\n    \r\n    \r\n\r\n\r\n    /**\r\n      * @dev These functions are in the WhitelistAdminRole contract. \r\n      *      As the Admin contract inherits from both, these functions are \r\n      *      available from the admin contract, and can be found in the \r\n      *      WhitelistAdminRole contract from OppenZeppelin.\r\n      *\r\n      * @dev A view function checking if an address is an admin\r\n        function isWhitelistAdmin(address account) public view returns (bool) {\r\n            return _whitelistAdmins.has(account);\r\n        }\r\n      *\r\n      * @dev Allows an admin address to add another admin account\r\n        function addWhitelistAdmin(address account) public onlyWhitelistAdmin {\r\n            _addWhitelistAdmin(account);\r\n        }\r\n      *\r\n      * @dev Allows an admin address to remove itself as an admin\r\n        function renounceWhitelistAdmin() public {\r\n            _removeWhitelistAdmin(msg.sender);\r\n        }\r\n     */\r\n}",
  "sourcePath": "C:\\Users\\Veronica Coutts\\Desktop\\Desktop\\Work\\Ribbon\\projects\\IncentivesAlpha\\Blockchain\\contracts\\Admin\\IAdmin.sol",
  "ast": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Admin/IAdmin.sol",
    "exportedSymbols": {
      "IAdmin": [
        159
      ]
    },
    "id": 160,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 158,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 159,
        "linearizedBaseContracts": [
          159
        ],
        "name": "IAdmin",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 160,
        "src": "28:952:3"
      }
    ],
    "src": "0:980:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Admin/IAdmin.sol",
    "exportedSymbols": {
      "IAdmin": [
        159
      ]
    },
    "id": 160,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 158,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 159,
        "linearizedBaseContracts": [
          159
        ],
        "name": "IAdmin",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 160,
        "src": "28:952:3"
      }
    ],
    "src": "0:980:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-13T16:43:50.385Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}