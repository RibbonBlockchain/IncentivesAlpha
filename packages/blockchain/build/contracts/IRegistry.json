{
  "contractName": "IRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "setVault",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAccessControl",
          "type": "address"
        }
      ],
      "name": "updateAccessControl",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_switch",
          "type": "bool"
        }
      ],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newAddress",
          "type": "address"
        },
        {
          "name": "_role",
          "type": "uint8"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_newRole",
          "type": "uint8"
        }
      ],
      "name": "updateRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity = 0.5.0;\r\n\r\n/**\r\n  * @dev An interface for the registry contract\r\n  * @author @vonnie610 (GitHub)\r\n  */\r\ncontract IRegistry {\r\n\r\n    /**\r\n      * @dev Allows the admin contract to update/set the address of the vault\r\n      * @notice This can only be called by the admin contract\r\n      */\r\n    function setVault(address _vault) external;\r\n\r\n    /**\r\n      * @dev Allows the admin contract to update the access control contract\r\n      */\r\n    function updateAccessControl(address _newAccessControl) external;\r\n\r\n    /**\r\n      * @dev Allows the admin contract to kill the access control contract\r\n      * @notice The access control contract will not self destruct, but all \r\n      *         functionality will be haulted. \r\n      */\r\n    function kill(bool _switch) external;\r\n\r\n    /**\r\n      * @dev This function allows the admin contact or a CHW to add new \r\n      *      addresses to the registry.\r\n      */\r\n    function registerUser(address _newAddress, uint8 _role) external; \r\n\r\n    /**\r\n      * @dev Allows the admin to update the role of a user\r\n      */\r\n    function updateRole(address _user, uint8 _newRole) external;\r\n\r\n    /**\r\n      * @dev Allows the admin contract to remove a user\r\n      */\r\n    function removeUser(address _user) external;\r\n\r\n}",
  "sourcePath": "C:\\Users\\Veronica Coutts\\Desktop\\Desktop\\Work\\Ribbon\\projects\\IncentivesAlpha\\Blockchain\\contracts\\Registry\\IRegistry.sol",
  "ast": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Registry/IRegistry.sol",
    "exportedSymbols": {
      "IRegistry": [
        438
      ]
    },
    "id": 439,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 403,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev An interface for the registry contract\r\n@author @vonnie610 (GitHub)\r",
        "fullyImplemented": false,
        "id": 438,
        "linearizedBaseContracts": [
          438
        ],
        "name": "IRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to update/set the address of the vault\r\n@notice This can only be called by the admin contract\r",
            "id": 408,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 408,
                  "src": "328:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:16:7"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:0:7"
            },
            "scope": 438,
            "src": "310:43:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to update the access control contract\r",
            "id": 413,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAccessControl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 410,
                  "name": "_newAccessControl",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "487:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:27:7"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:7"
            },
            "scope": 438,
            "src": "458:65:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to kill the access control contract\r\n@notice The access control contract will not self destruct, but all \r\n        functionality will be haulted. \r",
            "id": 418,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "name": "_switch",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "767:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "766:14:7"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:7"
            },
            "scope": 438,
            "src": "753:37:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev This function allows the admin contact or a CHW to add new \r\n     addresses to the registry.\r",
            "id": 425,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "954:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "975:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "953:34:7"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:7"
            },
            "scope": 438,
            "src": "932:65:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin to update the role of a user\r",
            "id": 432,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1105:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "name": "_newRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1120:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:31:7"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:0:7"
            },
            "scope": 438,
            "src": "1085:60:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to remove a user\r",
            "id": 437,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1249:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1248:15:7"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1272:0:7"
            },
            "scope": 438,
            "src": "1229:44:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 439,
        "src": "121:1157:7"
      }
    ],
    "src": "0:1278:7"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/Registry/IRegistry.sol",
    "exportedSymbols": {
      "IRegistry": [
        438
      ]
    },
    "id": 439,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 403,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev An interface for the registry contract\r\n@author @vonnie610 (GitHub)\r",
        "fullyImplemented": false,
        "id": 438,
        "linearizedBaseContracts": [
          438
        ],
        "name": "IRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to update/set the address of the vault\r\n@notice This can only be called by the admin contract\r",
            "id": 408,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 408,
                  "src": "328:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "327:16:7"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:0:7"
            },
            "scope": 438,
            "src": "310:43:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to update the access control contract\r",
            "id": 413,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAccessControl",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 410,
                  "name": "_newAccessControl",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "487:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "486:27:7"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:7"
            },
            "scope": 438,
            "src": "458:65:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to kill the access control contract\r\n@notice The access control contract will not self destruct, but all \r\n        functionality will be haulted. \r",
            "id": 418,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "name": "_switch",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "767:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "767:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "766:14:7"
            },
            "returnParameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:7"
            },
            "scope": 438,
            "src": "753:37:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev This function allows the admin contact or a CHW to add new \r\n     addresses to the registry.\r",
            "id": 425,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "name": "_newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "954:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "name": "_role",
                  "nodeType": "VariableDeclaration",
                  "scope": 425,
                  "src": "975:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "953:34:7"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:7"
            },
            "scope": 438,
            "src": "932:65:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin to update the role of a user\r",
            "id": 432,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateRole",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 427,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1105:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "name": "_newRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1120:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:31:7"
            },
            "returnParameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:0:7"
            },
            "scope": 438,
            "src": "1085:60:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Allows the admin contract to remove a user\r",
            "id": 437,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "1249:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1248:15:7"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1272:0:7"
            },
            "scope": 438,
            "src": "1229:44:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 439,
        "src": "121:1157:7"
      }
    ],
    "src": "0:1278:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-13T16:43:50.650Z",
  "devdoc": {
    "author": "@vonnie610 (GitHub)\r",
    "details": "An interface for the registry contract\r",
    "methods": {
      "kill(bool)": {
        "details": "Allows the admin contract to kill the access control contract\r"
      },
      "registerUser(address,uint8)": {
        "details": "This function allows the admin contact or a CHW to add new \r     addresses to the registry.\r"
      },
      "removeUser(address)": {
        "details": "Allows the admin contract to remove a user\r"
      },
      "setVault(address)": {
        "details": "Allows the admin contract to update/set the address of the vault\r"
      },
      "updateAccessControl(address)": {
        "details": "Allows the admin contract to update the access control contract\r"
      },
      "updateRole(address,uint8)": {
        "details": "Allows the admin to update the role of a user\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "kill(bool)": {
        "notice": "The access control contract will not self destruct, but all \r        functionality will be haulted. \r"
      },
      "setVault(address)": {
        "notice": "This can only be called by the admin contract\r"
      }
    }
  }
}