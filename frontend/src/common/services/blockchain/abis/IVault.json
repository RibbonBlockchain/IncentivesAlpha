{
  "contractName": "IVault",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "donateFunds",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_patient",
          "type": "address"
        },
        {
          "name": "_practitioner",
          "type": "address"
        },
        {
          "name": "_CHW",
          "type": "address"
        },
        {
          "name": "_patientAmount",
          "type": "uint256"
        },
        {
          "name": "_practitionerAmount",
          "type": "uint256"
        },
        {
          "name": "_CHWAmount",
          "type": "uint256"
        }
      ],
      "name": "payout",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_registry",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.10;\n\ninterface IVault {\n    \n    /**\n      * @notice Allows the vault to receive funds from the admin contract. This\n      *         will mint tokens that will be owned by the vault until they are\n      *         spent as payouts.\n      * @param  _message : A message assosicated with the donation.\n      */\n    function donateFunds(string calldata _message) external payable;\n\n    /**\n      * @notice Allows a CHW to create payouts. The `msg.sender` is verified\n      *         against the registry.\n      */\n    function payout(\n        address payable _patient,\n        address payable _practitioner,\n        address payable _CHW,\n        uint256 _patientAmount,\n        uint256 _practitionerAmount,\n        uint256 _CHWAmount\n    )\n        external;\n\n    /**\n      * @notice Allows the admin contract to add the address of the registry.\n      * @dev    The vault will not function untill this function has been\n      *         called. This function is called from the admin contract.\n      */\n    function init(address _registry) external;\n\n    /**\n      * @notice Allows the admin contract to kill the vault. This will make the\n      *         vault send all collateral to the admin contract owner, as well\n      *         as burn all remaining tokens.\n      */\n    function kill() external;\n}",
  "sourcePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/Vault/IVault.sol",
  "ast": {
    "absolutePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/Vault/IVault.sol",
    "exportedSymbols": {
      "IVault": [885]
    },
    "id": 886,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 856,
        "literals": ["solidity", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 885,
        "linearizedBaseContracts": [885],
        "name": "IVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Allows the vault to receive funds from the admin contract. This\n        will mint tokens that will be owned by the vault until they are\n        spent as payouts.\n@param  _message : A message assosicated with the donation.",
            "id": 861,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "donateFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "353:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:26:8"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:8"
            },
            "scope": 885,
            "src": "332:64:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows a CHW to create payouts. The `msg.sender` is verified\n        against the registry.",
            "id": 876,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "559:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 865,
                  "name": "_practitioner",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "593:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "name": "_CHW",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "632:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "name": "_patientAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "662:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 871,
                  "name": "_practitionerAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "694:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "name": "_CHWAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "731:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:206:8"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:8"
            },
            "scope": 885,
            "src": "534:239:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to add the address of the registry.\n@dev    The vault will not function untill this function has been\n        called. This function is called from the admin contract.",
            "id": 881,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1035:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:19:8"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1062:0:8"
            },
            "scope": 885,
            "src": "1021:42:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to kill the vault. This will make the\n        vault send all collateral to the admin contract owner, as well\n        as burn all remaining tokens.",
            "id": 884,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:2:8"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:8"
            },
            "scope": 885,
            "src": "1291:25:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 886,
        "src": "25:1293:8"
      }
    ],
    "src": "0:1318:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/Vault/IVault.sol",
    "exportedSymbols": {
      "IVault": [885]
    },
    "id": 886,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 856,
        "literals": ["solidity", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 885,
        "linearizedBaseContracts": [885],
        "name": "IVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Allows the vault to receive funds from the admin contract. This\n        will mint tokens that will be owned by the vault until they are\n        spent as payouts.\n@param  _message : A message assosicated with the donation.",
            "id": 861,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "donateFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "name": "_message",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "353:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "352:26:8"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:0:8"
            },
            "scope": 885,
            "src": "332:64:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows a CHW to create payouts. The `msg.sender` is verified\n        against the registry.",
            "id": 876,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "559:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 865,
                  "name": "_practitioner",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "593:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 867,
                  "name": "_CHW",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "632:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "name": "_patientAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "662:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 871,
                  "name": "_practitionerAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "694:27:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "name": "_CHWAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 876,
                  "src": "731:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:206:8"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:0:8"
            },
            "scope": 885,
            "src": "534:239:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to add the address of the registry.\n@dev    The vault will not function untill this function has been\n        called. This function is called from the admin contract.",
            "id": 881,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "1035:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1034:19:8"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1062:0:8"
            },
            "scope": 885,
            "src": "1021:42:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to kill the vault. This will make the\n        vault send all collateral to the admin contract owner, as well\n        as burn all remaining tokens.",
            "id": 884,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:2:8"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:8"
            },
            "scope": 885,
            "src": "1291:25:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 886,
        "src": "25:1293:8"
      }
    ],
    "src": "0:1318:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang",
    "optimizer": true,
    "runs": 500
  },
  "networks": {},
  "schemaVersion": "2.2.0",
  "updatedAt": "2019-10-22T17:03:42.455Z"
}
