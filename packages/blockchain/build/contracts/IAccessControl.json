{
  "contractName": "IAccessControl",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_switch",
          "type": "bool"
        }
      ],
      "name": "killSwitch",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity = 0.5.0;\r\n\r\n/**\r\n  * @dev An interface for the access control contract\r\n  * @author @vonnie610 (GitHub)\r\n  */\r\ncontract IAccessControl {\r\n    \r\n    /**\r\n      * @dev Allows the registry to hault all of the access controls\r\n      *      functionality\r\n      * @notice The bool _switch means that this hault is reversable.\r\n      */\r\n    function killSwitch(bool _switch) external;\r\n}",
  "sourcePath": "C:\\Users\\Veronica Coutts\\Desktop\\Desktop\\Work\\Ribbon\\projects\\IncentivesAlpha\\Blockchain\\contracts\\AccessControl\\IAccessControl.sol",
  "ast": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/AccessControl/IAccessControl.sol",
    "exportedSymbols": {
      "IAccessControl": [
        66
      ]
    },
    "id": 67,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 60,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev An interface for the access control contract\r\n@author @vonnie610 (GitHub)\r",
        "fullyImplemented": false,
        "id": 66,
        "linearizedBaseContracts": [
          66
        ],
        "name": "IAccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Allows the registry to hault all of the access controls\r\n     functionality\r\n@notice The bool _switch means that this hault is reversable.\r",
            "id": 65,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "killSwitch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "_switch",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "372:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:14:1"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:1"
            },
            "scope": 66,
            "src": "352:43:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 67,
        "src": "127:271:1"
      }
    ],
    "src": "0:398:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/Ribbon/projects/IncentivesAlpha/Blockchain/contracts/AccessControl/IAccessControl.sol",
    "exportedSymbols": {
      "IAccessControl": [
        66
      ]
    },
    "id": 67,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 60,
        "literals": [
          "solidity",
          "=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@dev An interface for the access control contract\r\n@author @vonnie610 (GitHub)\r",
        "fullyImplemented": false,
        "id": 66,
        "linearizedBaseContracts": [
          66
        ],
        "name": "IAccessControl",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Allows the registry to hault all of the access controls\r\n     functionality\r\n@notice The bool _switch means that this hault is reversable.\r",
            "id": 65,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "killSwitch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "name": "_switch",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "372:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "371:14:1"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:1"
            },
            "scope": 66,
            "src": "352:43:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 67,
        "src": "127:271:1"
      }
    ],
    "src": "0:398:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-13T16:43:50.208Z",
  "devdoc": {
    "author": "@vonnie610 (GitHub)\r",
    "details": "An interface for the access control contract\r",
    "methods": {
      "killSwitch(bool)": {
        "details": "Allows the registry to hault all of the access controls\r     functionality\r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "killSwitch(bool)": {
        "notice": "The bool _switch means that this hault is reversable.\r"
      }
    }
  }
}