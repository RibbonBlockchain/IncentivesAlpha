{
  "contractName": "IAdmin",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "donateFunds",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_userRole",
          "type": "uint8"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "removeUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_newUserRole",
          "type": "uint8"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.10;\n\ninterface IAdmin {\n\n    enum UserRole { INACTIVE, ADMIN, CHW, PAT, PRAC }\n\n    /**\n      * @notice Sends funds to the vault.\n      */\n    function donateFunds() external payable;\n\n    /**\n      * @notice Allows the admin contract to add a user as any user role.\n      */\n    function addUser(address _user, uint8 _userRole) external;\n\n    /**\n      * @notice Allows the admin contract to remove a user.\n      */\n    function removeUser(address _user) external;\n\n    /**\n      * @notice Allows the admin contract to update the role of the user.\n      */\n    function updateUser(address _user, uint8 _newUserRole) external;\n\n    /**\n      * @notice Allows the admin of the admin contract to kill the eco-system.\n      *         This will send all remaining collateral in the vault to the\n      *         admin as well as burning all the tokens. This function will kill\n      *         the vault and the registry.\n      */\n    function kill() external;\n}",
  "sourcePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/AdminDAO/IAdmin.sol",
  "ast": {
    "absolutePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/AdminDAO/IAdmin.sol",
    "exportedSymbols": {
      "IAdmin": [152]
    },
    "id": 153,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 120,
        "literals": ["solidity", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 152,
        "linearizedBaseContracts": [152],
        "name": "IAdmin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IAdmin.UserRole",
            "id": 126,
            "members": [
              {
                "id": 121,
                "name": "INACTIVE",
                "nodeType": "EnumValue",
                "src": "65:8:1"
              },
              {
                "id": 122,
                "name": "ADMIN",
                "nodeType": "EnumValue",
                "src": "75:5:1"
              },
              {
                "id": 123,
                "name": "CHW",
                "nodeType": "EnumValue",
                "src": "82:3:1"
              },
              {
                "id": 124,
                "name": "PAT",
                "nodeType": "EnumValue",
                "src": "87:3:1"
              },
              {
                "id": 125,
                "name": "PRAC",
                "nodeType": "EnumValue",
                "src": "92:4:1"
              }
            ],
            "name": "UserRole",
            "nodeType": "EnumDefinition",
            "src": "49:49:1"
          },
          {
            "body": null,
            "documentation": "@notice Sends funds to the vault.",
            "id": 129,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "donateFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:2:1"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:0:1"
            },
            "scope": 152,
            "src": "163:40:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to add a user as any user role.",
            "id": 136,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "317:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "name": "_userRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "332:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "316:32:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:1"
            },
            "scope": 152,
            "src": "300:58:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to remove a user.",
            "id": 141,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "461:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:15:1"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:1"
            },
            "scope": 152,
            "src": "441:44:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to update the role of the user.",
            "id": 148,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "602:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "name": "_newUserRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "617:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "601:35:1"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:1"
            },
            "scope": 152,
            "src": "582:64:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin of the admin contract to kill the eco-system.\n        This will send all remaining collateral in the vault to the\n        admin as well as burning all the tokens. This function will kill\n        the vault and the registry.",
            "id": 151,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:2:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:1"
            },
            "scope": 152,
            "src": "949:25:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 153,
        "src": "25:951:1"
      }
    ],
    "src": "0:976:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/Projects/IncentivesAlpha/Blockchain/contracts/AdminDAO/IAdmin.sol",
    "exportedSymbols": {
      "IAdmin": [152]
    },
    "id": 153,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 120,
        "literals": ["solidity", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 152,
        "linearizedBaseContracts": [152],
        "name": "IAdmin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "IAdmin.UserRole",
            "id": 126,
            "members": [
              {
                "id": 121,
                "name": "INACTIVE",
                "nodeType": "EnumValue",
                "src": "65:8:1"
              },
              {
                "id": 122,
                "name": "ADMIN",
                "nodeType": "EnumValue",
                "src": "75:5:1"
              },
              {
                "id": 123,
                "name": "CHW",
                "nodeType": "EnumValue",
                "src": "82:3:1"
              },
              {
                "id": 124,
                "name": "PAT",
                "nodeType": "EnumValue",
                "src": "87:3:1"
              },
              {
                "id": 125,
                "name": "PRAC",
                "nodeType": "EnumValue",
                "src": "92:4:1"
              }
            ],
            "name": "UserRole",
            "nodeType": "EnumDefinition",
            "src": "49:49:1"
          },
          {
            "body": null,
            "documentation": "@notice Sends funds to the vault.",
            "id": 129,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "donateFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "183:2:1"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:0:1"
            },
            "scope": 152,
            "src": "163:40:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to add a user as any user role.",
            "id": 136,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "317:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "name": "_userRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "332:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "316:32:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:1"
            },
            "scope": 152,
            "src": "300:58:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to remove a user.",
            "id": 141,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "461:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:15:1"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:1"
            },
            "scope": 152,
            "src": "441:44:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin contract to update the role of the user.",
            "id": 148,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "602:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "602:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "name": "_newUserRole",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "617:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "601:35:1"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:1"
            },
            "scope": 152,
            "src": "582:64:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Allows the admin of the admin contract to kill the eco-system.\n        This will send all remaining collateral in the vault to the\n        admin as well as burning all the tokens. This function will kill\n        the vault and the registry.",
            "id": 151,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:2:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:0:1"
            },
            "scope": 152,
            "src": "949:25:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 153,
        "src": "25:951:1"
      }
    ],
    "src": "0:976:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang",
    "optimizer": true,
    "runs": 999
  },
  "networks": {},
  "schemaVersion": "2.2.0",
  "updatedAt": "2019-09-26T07:20:15.817Z"
}
